name: Build CASM dependencies on Ubuntu

on:
  workflow_call:

jobs:
  build-depends:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up requirements & configuration variables
        run: |
          sudo apt-get update
          sudo apt-get install build-essential cmake
          pip install --upgrade pip wheel build

      ### libcasm-global ###
      - name: restore libcasm-global cache
        id: cache-libcasm-global-restore
        uses: actions/cache/restore@v4
        with:
          path: CASMcode_global/dist
          key: ${{ runner.os }}-libcasm-global-v2-0-6

      - name: checkout libcasm-global
        if: steps.cache-libcasm-global-restore.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: prisms-center/CASMcode_global
          path: CASMcode_global
          ref: v2.0.6

      - name: make global
        if: steps.cache-libcasm-global-restore.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cd CASMcode_global
          git submodule update --init --recursive
          python -m build
          pip install dist/*.whl
          pip install -r test_requirements.txt
          python -m pytest -rsap python/tests

      - name: save libcasm-global cache
        id: cache-libcasm-global-save
        uses: actions/cache/save@v4
        with:
          path: CASMcode_global/dist
          key: ${{ steps.cache-libcasm-global-restore.outputs.cache-primary-key }}

      ### libcasm-composition ###
      - name: restore libcasm-composition cache
        id: cache-libcasm-composition-restore
        uses: actions/cache/restore@v4
        with:
          path: CASMcode_composition/dist
          key: ${{ runner.os }}-libcasm-composition-v2-0-0

      - name: checkout libcasm-composition
        if: steps.cache-libcasm-composition-restore.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: prisms-center/CASMcode_composition
          path: CASMcode_composition
          ref: v2.0.0

      - name: make composition
        if: steps.cache-libcasm-composition-restore.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cd CASMcode_composition
          python -m build
          pip install dist/*.whl
          pip install -r test_requirements.txt
          python -m pytest -rsap python/tests

      - name: save libcasm-composition cache
        id: cache-libcasm-composition-save
        uses: actions/cache/save@v4
        with:
          path: CASMcode_composition/dist
          key: ${{ steps.cache-libcasm-composition-restore.outputs.cache-primary-key }}

      ### libcasm-xtal ###
      - name: restore libcasm-xtal cache
        id: cache-libcasm-xtal-restore
        uses: actions/cache/restore@v4
        with:
          path: CASMcode_crystallography/dist
          key: ${{ runner.os }}-libcasm-xtal-v2-0-0

      - name: checkout libcasm-xtal
        if: steps.cache-libcasm-xtal-restore.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: prisms-center/CASMcode_crystallography
          path: CASMcode_crystallography
          ref: v2.0.0

      - name: make xtal
        if: steps.cache-libcasm-xtal-restore.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cd CASMcode_crystallography
          python -m build
          pip install dist/*.whl
          pip install -r test_requirements.txt
          python -m pytest -rsap python/tests

      - name: save libcasm-xtal cache
        id: cache-libcasm-xtal-save
        uses: actions/cache/save@v4
        with:
          path: CASMcode_crystallography/dist
          key: ${{ steps.cache-libcasm-xtal-restore.outputs.cache-primary-key }}
